Singly & Doubly Linked Lists


Q)  What is a Linked List?

A Linked List is a sequential list of nodes that hold data which point to other nodes also containing data.


Q)  Where are Linked Lists used?

- Used in many List, Queue & Stack implementations.

- Great for creating circular lists.

- Can easily model real world objects such as trains.

- Used in separate chaining, which is present in certain Hastable implementations to deal with Hash collisions.

- Often used in the implementation of adjacency lists for graphs.


Q) Singly vs Doubly Linked Lists

Singly Linked Lists only hold a Reference to the next node. 
In the implementation you always maintain a reference to the head to the linked list and a reference to the tail node for quick additions/removals.

Doubly Linked Lists each hold a reference to the next and previous node.
In the implementation you always maintain a reference to the head and the tail of the Doubly Linked List to do quick additions/removals from both ends of your list.


Terminology Explained

Head - The first node in a linked list

Tail - The last node in a linked list

Pointer - Reference to another node

Node - An object containing data and pointer(s)